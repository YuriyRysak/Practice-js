{"mappings":"AACgB,IAAIA,SAAQ,CAACC,EAASC,KAClC,MAAMC,EAAaC,KAAKC,SAAW,GACrCC,YAAW,KACLH,GACAF,EAAQ,kEAG+BC,EAApC,4BAA4B,GACpC,IAAK,IAwBAK,MAAKC,IACTC,QAAQC,IAAIF,EAAO,IAEpBD,MAAKI,IACJF,QAAQC,IAAIC,EAAE","sources":["src/js/promise.js"],"sourcesContent":["\nconst promise = new Promise((resolve, reject) => {\n    const canFulfill = Math.random() > 0.5;\n  setTimeout(() => {\n    if (canFulfill) {\n        resolve('Промис выполнился успешно, с результатом (исполнен, fulfilled)');\n        \n    }\n    reject('Promis failed (rejected)!');\n}, 1000);\n});\n\n// promise.then(\n//     result => {\n//     console.log(`✅ ${result}`);\n// },\n// error => {\n//     console.log(`❌ ${error}`);\n// },);\n\n// promise.then(onFulfilled, onRejected);\n\nfunction onFulfilled(result) {\n    console.log(`✅ ${result}`);\n   \n}\nfunction onRejected(error) {\n    console.log(`❌ ${error}`);\n}\n\n\n\n// цепочка промисов\npromise.then(result => {\n    console.log(result);\n//   return 5;\n}).then(x => {\n    console.log(x);\n});\n"],"names":["Promise","resolve","reject","canFulfill","Math","random","setTimeout","then","result","console","log","x"],"version":3,"file":"promise.3ef46a4b.js.map"}