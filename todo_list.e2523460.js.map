{"mappings":"AAeA,SAAAA,gBAAAC,EAAAC,EAAAC,G,wcAAA,IAAMC,aAAeC,SAASC,cAAc,YACtCC,QAAUF,SAASC,cAAc,cACjCE,YAAcH,SAASC,cAAc,cAG3CF,aAAaK,iBAAiB,WAAW,SAAAC,GACrC,GAAa,UAAVA,EAAER,IAAL,CAEA,IAAIS,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,aAEtCJ,IACDA,EAAO,IAGXA,EAAKK,KAAK,CACNb,MAAOO,EAAEO,OAAOd,MAChBe,MAAO,YAGX,IAAMC,EAAWP,KAAKQ,UAAUT,GAEhCG,aAAaO,QAAQ,WAAYF,GACjCT,EAAEO,OAAOd,MAAQ,GAEjBmB,gBAlBsB,C,IAqB1Bd,YAAYC,iBAAiB,SAAS,SAAAC,GAClCI,aAAaO,QAAQ,WAAY,MACjCC,gB,IAGJf,QAAQE,iBAAiB,SAAS,SAAAC,GACN,eAAvBA,EAAEO,OAAOM,WACVC,WAAWd,EAAEO,OAAOQ,QAAQC,QAGJ,gBAAvBhB,EAAEO,OAAOM,WACVI,aAAajB,EAAEO,OAAOQ,QAAQC,O,IAIlC,IAAMJ,eAAiB,WACnB,IAAMM,EAAWhB,KAAKC,MAAMC,aAAaC,QAAQ,aACjDR,QAAQsB,UAAY,GAEpBD,EAASE,SAAQ,SAAAC,EAAiBC,G,IAAf7B,EAAK4B,EAAL5B,MAAOe,EAAKa,EAALb,MACtBX,QAAQ0B,mBAAmB,YAAY,yDAEhBC,OAAThB,EAAM,KACmCgB,OADhC/B,EAAM,0EAEyB+B,OADCF,EAAM,iFACDE,OAANF,EAAM,mC,KAQ9DR,WAAa,SAACW,GAEjB,IAAMxB,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,aAC7CJ,EAAKyB,OAAOD,EAAI,GAChBrB,aAAaO,QAAQ,WAAWT,KAAKQ,UAAUT,IAE/CW,gB,EAGGK,aAAe,SAACQ,GAClB,IAAMxB,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,aAE7CJ,EAAKwB,GAAME,cAAA,GACJ1B,EAAKwB,GAAG,CACXjB,MAAO,SAGXJ,aAAaO,QAAQ,WAAWT,KAAKQ,UAAUT,IAC/CW,gB,EAGJA","sources":["src/js/todo.js"],"sourcesContent":["// import '../css/todo.css';\n// Створити ToDo List\n//     Має бути поле ввода нового завдання\n//     має бути список створених завдань\n//     Завдання можна позначити як виконане\n//     завдання можна видалити\n// Алгоритм\n//    1 Зверстати форму для ввода нового завдання (інпут)\n//    2 Зверстати список завдань (текстове значення, кнопка видалення, кнопка виконання)\n//    3 Повішати подію нажаття на ентер в полі вводу завдання\n//    4 Записати нове завдання в локал сторідж по кліку на ентер в полі вводу\n//    5 оновити список завдань в HTML\n//    6 по кліку на кнопку виконано, закреслити завдання\n//    7 по кліку на кнопку видалити, видалити завдання\n\nconst taskInputRef = document.querySelector('#newTask');\nconst listRef = document.querySelector('.todo-list');\nconst clearBtnRef = document.querySelector('#clearList');\n\n\ntaskInputRef.addEventListener('keydown', e => {\n    if(e.key !== 'Enter') return \n\n    let data = JSON.parse(localStorage.getItem('todoList'));\n\n    if (!data) {\n        data = []\n    }\n\n    data.push({\n        value: e.target.value,\n        state: 'pending'\n    });\n\n    const jsonData = JSON.stringify(data);\n\n    localStorage.setItem('todoList', jsonData);\n    e.target.value = '';\n   \n    updateTodoList ()\n\n});\nclearBtnRef.addEventListener('click', e => {\n    localStorage.setItem('todoList', '[]');\n    updateTodoList()\n\n}) \nlistRef.addEventListener('click', e => {\n  if(e.target.className === 'deleteTask') {\n    deleteTask(e.target.dataset.taskid) \n  }\n\n  if(e.target.className === 'confirmTask') {\n    completeTask(e.target.dataset.taskid)\n  }\n\n}) \nconst updateTodoList = () => {\n    const todoList = JSON.parse(localStorage.getItem('todoList'));\n    listRef.innerHTML = '';\n\n    todoList.forEach(({value, state}, index) => {\n        listRef.insertAdjacentHTML('beforeend',`\n        <li class=\"task-item\">\n        <span class\"${state}>${value}</span>\n        <input type=\"button\" class=\"confirmTask\" data-taskID=${index} value=\"ready\">\n        <input type=\"button\" class=\"deleteTask\" data-taskId=${index} value=\"delete\">\n        </li>`\n        )\n   \n\n    })\n  }\n\nconst deleteTask = (id) => {\n   \n   const data = JSON.parse(localStorage.getItem('todoList'));\n   data.splice(id, 1);\n   localStorage.setItem('todoList',JSON.stringify(data))\n\n   updateTodoList()\n\n}\nconst completeTask = (id) => {\n    const data = JSON.parse(localStorage.getItem('todoList'));\n\n    data[id] = {\n        ...data[id],\n        state: 'done'\n    }\n\n    localStorage.setItem('todoList',JSON.stringify(data))\n    updateTodoList()\n\n}\nupdateTodoList ()"],"names":["_defineProperty","obj","key","value","taskInputRef","document","querySelector","listRef","clearBtnRef","addEventListener","e","data","JSON","parse","localStorage","getItem","push","target","state","jsonData","stringify","setItem","updateTodoList","className","deleteTask","dataset","taskid","completeTask","todoList","innerHTML","forEach","param","index","insertAdjacentHTML","concat","id","splice","_objectSpread"],"version":3,"file":"todo_list.e2523460.js.map"}